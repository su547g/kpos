<wsdl:definitions
        name="EBizCardServiceInternal"
        targetNamespace="http://ws.eBizCardInternal.com/app"
        xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
        xmlns:tns="http://ws.eBizCardInternal.com/app"
        xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:types>
		 <xs:schema
              targetNamespace="http://ws.eBizCardInternal.com/app"
              version="1.3"
              xmlns:tns="http://ws.eBizCardInternal.com/app"
              xmlns:xs="http://www.w3.org/2001/XMLSchema"
              elementFormDefault="qualified">
			
			<!-- This function is used login a user by his email or external site id (i.e., facebook). -->
			<xs:element name="AuthenticateUserResponseType" type="tns:AuthenticateUserResponseType"/>
			<xs:element name="AuthenticateUserExternalSiteType" type="tns:AuthenticateUserExternalSiteType"/>
			
			<!-- This function is used to fetch ALL of a user's card requests that he/she has received. -->
			<xs:element name="ListFriendCardRequestsType" type="tns:ListFriendCardRequestsType"/>
			<xs:element name="ListFriendCardRequestsResponseType" type="tns:ListFriendCardRequestsResponseType"/>
			
			<xs:complexType name="ResultType">
            	<xs:sequence>
               		<xs:element name="id" type="xsd:long" minOccurs="0" maxOccurs="1"/>
               		<xs:element name="successful" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
               		<xs:element name="failureReasonCode" type="xsd:int" minOccurs="0" maxOccurs="1"/>
               		<xs:element name="exception" type="xsd:string" minOccurs="0" maxOccurs="1"/>
               		<xs:element name="failureReason" type="xsd:string" minOccurs="0" maxOccurs="1"/>
            	</xs:sequence>
         	</xs:complexType>
         	
         	<xs:complexType name="AddressType">
         		<xs:sequence>
         			<xs:element name="address1" type="xsd:string" minOccurs="1" maxOccurs="1"/>
         			<xs:element name="address2" type="xsd:string" minOccurs="0" maxOccurs="1"/>
         			<xs:element name="address3" type="xsd:string" minOccurs="0" maxOccurs="1"/>
         			<xs:element name="city" type="xsd:string" minOccurs="1" maxOccurs="1"/>
         			<xs:element name="state" type="xsd:string" minOccurs="0" maxOccurs="1"/>
         			<xs:element name="country" type="xsd:string" minOccurs="0" maxOccurs="1"/>
         			<xs:element name="zipcode" type="xsd:string" minOccurs="1" maxOccurs="1"/>
         		</xs:sequence>
         	</xs:complexType>
         	
			<xsd:complexType name="BizCardType">
    			<xsd:sequence>
    				<xsd:element name="CardId"				type="xsd:long"/> 	<!-- internal private id -->
    				<xsd:element name="Name"				type="xsd:string"/> <!-- name of the card -->
    				<xsd:element name="Owner" 				type="tns:UserType" minOccurs="0"/> <!-- the user who received this card. When card is downloaded from iphone, owner is null -->
    				<xsd:element name="FirstName"			type="xsd:string"/>
    				<xsd:element name="MiddleName"			type="xsd:string" minOccurs="0"/>
    				<xsd:element name="LastName"			type="xsd:string"/>
    				<xsd:element name="JobTitle"			type="xsd:string" minOccurs="0"/>
    				<xsd:element name="Employer"			type="xsd:string" minOccurs="0"/>
    				<xsd:element name="BizTelephone" 		type="xsd:string" minOccurs="0"/>
    				<xsd:element name="HomeTelephone" 		type="xsd:string" minOccurs="0"/>
    				<xsd:element name="MobileTelephone" 	type="xsd:string" minOccurs="0"/>
    				<xsd:element name="Fax" 				type="xsd:string" minOccurs="0"/>
    				<xsd:element name="Address" 			type="tns:AddressType" minOccurs="0"/>
					<xsd:element name="Email" 				type="xsd:string" minOccurs="0"/>
					<xsd:element name="URL" 				type="xsd:string" minOccurs="0"/>
    				<xsd:element name="CardTemplateId"		type="xsd:long" minOccurs="1" maxOccurs="1"/> <!-- id of the card template -->
    			</xsd:sequence>	
    		</xsd:complexType>
			
			<xsd:complexType name="UserInfoType">
    			<xsd:sequence>
    				<xsd:element name="Name"				type="xsd:string"/> <!-- name of the profile -->
    				<xsd:element name="FirstName"			type="xsd:string" minOccurs="1" maxOccurs="1"/>
    				<xsd:element name="MiddleName"			type="xsd:string" minOccurs="0"/>
    				<xsd:element name="LastName"			type="xsd:string" minOccurs="1" maxOccurs="1"/>
    				<xsd:element name="JobTitle"			type="xsd:string" minOccurs="0"/>
    				<xsd:element name="Employer"			type="xsd:string" minOccurs="0"/>
    				<xsd:element name="BizTelephone" 		type="xsd:string" minOccurs="0"/>
    				<xsd:element name="HomeTelephone" 		type="xsd:string" minOccurs="0"/>
    				<xsd:element name="MobileTelephone" 	type="xsd:string" minOccurs="0"/>
    				<xsd:element name="Fax" 				type="xsd:string" minOccurs="0"/>
    				<xsd:element name="Address" 			type="tns:AddressType" minOccurs="0"/>
					<xsd:element name="Email" 				type="xsd:string" minOccurs="0"/>
					<xsd:element name="URL" 				type="xsd:string" minOccurs="0"/>
					<xsd:element name="IsPublic"            type="xsd:boolean" default="true"/> <!-- if true, user info is searchable by the public -->
					<xsd:element name="IsRequestable"       type="xsd:boolean" default="false"/> <!-- if true, any one can request a card from this user -->
    			</xsd:sequence>	
    		</xsd:complexType>
    		
    		<xsd:complexType name="UserIdType"><!--A type that uniquely defines a user. Used for locating user -->
    			<xsd:choice>
    				<xsd:element name="UserId"			type="xsd:long"/> <!-- internal private id -->
        			<xsd:element name="EmailAddress"	type="xsd:string"/> <!-- when request is sent to a public email address -->
       				<xsd:element name="ExternalId"		type="xsd:string"/> <!-- when request is sent to a social network id -->
     			</xsd:choice>
    		</xsd:complexType>
    		
        	<xsd:complexType name="CardRequestType">
        		<xsd:sequence>
        			<xsd:element name="Id"					type="xsd:long" minOccurs="0" maxOccurs="1"/> <!-- internal id of this request --> 
        			<xsd:element name="RequesterId"			type="xsd:long"	minOccurs="1" maxOccurs="1"/>
        			<xsd:element name="TargetUserId"		type="tns:UserIdType" minOccurs="1"/>
        			<xsd:element name="Message"				type="xsd:string" />
        			<xsd:element name="AutoAccepts" 		type="xsd:boolean" default="false"/> <!-- if true, requester will accept the return card automatically -->
        			<xsd:element name="RequestsReturnCard"  type="xsd:boolean" default="false"/> <!-- used when "exchange card" is requested -->
        		</xsd:sequence>
        	</xsd:complexType> 
        
      		<xsd:complexType name="UserType">
      			<xsd:sequence>
      				<xsd:element name="UserId" 			type="xsd:long"/>   <!-- internal private id -->
      				<xsd:element name="Email" 			type="xsd:string"/> <!-- user's email as user name -->
					<xsd:element name="Password"		type="xsd:string"/> <!-- user's password -->
      				<xsd:element name="ExternalId" 		type="xsd:string" minOccurs="0"/> <!-- prefexed external ids. facebook_* for facebook ids -->
					<xsd:element name="LastLoginTS"		type="xsd:string"/> <!-- timestamp of the last login -->
      			</xsd:sequence>
     		</xsd:complexType>
     	
        	<xsd:complexType name="AuthenticateUserExternalSiteType">
        		<xsd:sequence>
           			<xsd:element name="Email" 		type="xsd:string" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="ExternalId"	type="xsd:string" minOccurs="1" maxOccurs="1"/>
       			</xsd:sequence>
        	</xsd:complexType>
        	
        	<xsd:complexType name="AuthenticateUserResponseType">
        		<xsd:sequence>
           			<xsd:element name="Result" 		type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
           			<xsd:element name="UserId"		type="xsd:long" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="SessionKey" 	type="xsd:string" minOccurs="1" maxOccurs="1"/>
       			</xsd:sequence>
        	</xsd:complexType>
        	
      		<xsd:complexType name="ListFriendCardRequestsType">
      			<xsd:sequence>
      				<!--
      				<xsd:element name="SessionKey" type="xsd:string"/>
					<xsd:element name="UserId"		type="xsd:long" minOccurs="1" maxOccurs="1"/>
					-->
					<xsd:element name="FacebookId" type="xsd:string" minOccurs="0"/>
					<xsd:element name="Email"	   type="xsd:string" minOccurs="0"/>
					<xsd:element name="PageNum"    type="xsd:int" default="0"/>
      			</xsd:sequence>
      		</xsd:complexType>
      		
      		<xsd:complexType name="ListFriendCardRequestsResponseType">
      			<xsd:sequence>
      				<xsd:element name="Result" type="tns:ResultType"/>
					<xsd:element name="CardRequestResponse" type="tns:CardRequestResponseType" minOccurs="0" maxOccurs="unbounded"/>
      			</xsd:sequence>
      		</xsd:complexType>
			
			<xsd:complexType name="CardRequestResponseType">
				<xsd:sequence>
					<xsd:element name="CardRequest" type="tns:CardRequestType" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="Card" type="tns:BizCardType" minOccurs="1" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:complexType>
		</xs:schema>
	</wsdl:types>
  	
  	<wsdl:message name="AuthenticateUserResponseMessage">
    	<wsdl:part name="parameters" element="tns:AuthenticateUserResponseType"/>
  	</wsdl:message>
  	
  	<wsdl:message name="AuthenticateUserExternalSiteMessage">
  		<wsdl:part name="parameters" element="tns:AuthenticateUserExternalSiteType"/>
  	</wsdl:message>
  	
  	<wsdl:message name="ListFriendCardRequestsMessage">
  		<wsdl:part name="parameters" element="tns:ListFriendCardRequestsType"/>
  	</wsdl:message>
  	
  	<wsdl:message name="ListFriendCardRequestsResponseMessage">
    	<wsdl:part name="parameters" element="tns:ListFriendCardRequestsResponseType"/>
  	</wsdl:message>
  	
  	<wsdl:message name="ListFriendCardRequestsSecureMessage">
  		<wsdl:part name="parameters" element="tns:ListFriendCardRequestsSecureType"/>
  	</wsdl:message>
  	
    <wsdl:portType name="InternalBizCardPortType">
    	<wsdl:operation name="AuthenticateUserExternalSite">
      		<wsdl:input message="tns:AuthenticateUserExternalSiteMessage" name="AuthenticateUserExternalSite"/>
      		<wsdl:output message="tns:AuthenticateUserResponseMessage" name="AuthenticateUserResponse"/>
    	</wsdl:operation>
    	
    	<wsdl:operation name="ListFriendCardRequests">
      		<wsdl:input message="tns:ListFriendCardRequestsMessage" name="ListFriendCardRequests"/>
      		<wsdl:output message="tns:ListFriendCardRequestsResponseMessage" name="ListFriendCardRequestsResponse"/>
    	</wsdl:operation>
	</wsdl:portType>
	
	<wsdl:binding name="BizCardBinding" type="tns:InternalBizCardPortType">
    	<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		
    	<wsdl:operation name="AuthenticateUserExternalSite">
      		<soap:operation soapAction="http://ws.eBizCardInternal.com/AuthenticateUserExternalSite" style="document"/>
      		<wsdl:input name="AuthenticateUserExternalSite">
        		<soap:body use="literal"/>
      		</wsdl:input>
      		<wsdl:output name="AuthenticateUserResponse">
        		<soap:body use="literal"/>
      		</wsdl:output>
    	</wsdl:operation>
		
		<wsdl:operation name="ListFriendCardRequests">
      		<soap:operation soapAction="http://ws.eBizCardInternal.com/ListFriendCardRequests" style="document"/>
      		<wsdl:input name="ListFriendCardRequests">
        		<soap:body use="literal"/>
      		</wsdl:input>
      		<wsdl:output name="ListFriendCardRequestsResponse">
        		<soap:body use="literal"/>
      		</wsdl:output>
    	</wsdl:operation>
	</wsdl:binding>
	
	<wsdl:service name="InternalBizCardService">
      <wsdl:port name="InternalBizCardPort" binding="tns:BizCardBinding">
         <soap:address location="http://127.0.0.1:22080/eBizCardInternal/ws/eBizCardServiceInternal"/>
      </wsdl:port>
   </wsdl:service>
</wsdl:definitions>
